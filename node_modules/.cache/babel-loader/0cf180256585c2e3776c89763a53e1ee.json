{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\hclreact\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpenseFilter from './ExpenseFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('');\n\n  const filterHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const expenseToDisplay = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let displayContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses to Display\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this);\n\n  if (expenseToDisplay.length > 0) {\n    expenseToDisplay.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), expenseToDisplay.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Expenses to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 51\n      }, this), expenseToDisplay.length > 0 && expenseToDisplay.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"nl6XLxpokt7J+T95q7k/I/7NRaA=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Matt/hclreact/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterHandler","selectedYear","expenseToDisplay","item","filter","expense","date","getFullYear","toString","displayContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,aAAa,GAAGC,YAAY,IAAI;AAClCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAIA,MAAIW,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAAgC;AAC5BR,IAAAA,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACjB,QAAC,WAAD;AAEI,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFnB;AAGI,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHpB;AAII,MAAA,IAAI,EAAER,OAAO,CAACC;AAJlB,OACSD,OAAO,CAACS,EADjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAED,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,aAAD;AACI,QAAA,QAAQ,EAAEhB,YADd;AAEI,QAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALtC,EAMKR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACGR,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACjB,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,OAAO,CAACO,KAFnB;AAGI,QAAA,MAAM,EAAEP,OAAO,CAACQ,MAHpB;AAII,QAAA,IAAI,EAAER,OAAO,CAACC;AAJlB,SACSD,OAAO,CAACS,EADjB;AAAA;AAAA;AAAA;AAAA,cADJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7CQlB,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpenseFilter from './ExpenseFilter';\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('');\r\n\r\n    const filterHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const expenseToDisplay = props.item.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n    \r\n    let displayContent = <p>No Expenses to Display</p>;\r\n\r\n    if(expenseToDisplay.length > 0) {\r\n        expenseToDisplay.map((expense) => ( \r\n            <ExpenseItem \r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpenseFilter \r\n                    selected={filteredYear} \r\n                    onChangeFilter={filterHandler} \r\n                />\r\n                {expenseToDisplay.length === 0 && <p>No Expenses to Display</p>}\r\n                {expenseToDisplay.length > 0 &&\r\n                    expenseToDisplay.map((expense) => ( \r\n                        <ExpenseItem \r\n                            key={expense.id}\r\n                            title={expense.title}\r\n                            amount={expense.amount}\r\n                            date={expense.date}\r\n                        />\r\n                    )\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}